import logging
import json
import os
import requests
from datetime import datetime
from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "d√°n_token_telegram_·ªü_ƒë√¢y_n·∫øu_test")
OPENROUTER_API_KEY = os.getenv("OPENROUTER_API_KEY", "d√°n_api_key_openrouter")

VERSION = "v1.4"
USAGE_LIMIT = 10
USAGE_TRACK_FILE = "usage.json"
MEMORY_FILE_TEMPLATE = "memory_{}.json"

conversation_memory = {}
usage_counter = {}

def load_usage():
    global usage_counter
    if os.path.exists(USAGE_TRACK_FILE):
        with open(USAGE_TRACK_FILE, "r") as f:
            usage_counter = json.load(f)

def save_usage():
    with open(USAGE_TRACK_FILE, "w") as f:
        json.dump(usage_counter, f)

def save_memory(chat_id):
    mem_file = MEMORY_FILE_TEMPLATE.format(chat_id)
    with open(mem_file, "w") as f:
        json.dump(conversation_memory.get(chat_id, []), f)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        f"ü§ñ Xin ch√†o! M√¨nh l√† bot AI `mygpt_albot` d√πng OpenRouter API.\nG·ª≠i m√¨nh c√¢u h·ªèi nh√©!"
    )

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = str(update.effective_chat.id)
    count = usage_counter.get(chat_id, 0)
    await update.message.reply_text(
        f"üìö Bot phi√™n b·∫£n: {VERSION}\nB·∫°n ƒë√£ s·ª≠ d·ª•ng: {count} l·∫ßn\n\n"
        "/start - Kh·ªüi ƒë·ªông l·∫°i bot\n"
        "/help - Xem h∆∞·ªõng d·∫´n v√† s·ªë l·∫ßn s·ª≠ d·ª•ng\n"
        "/reset - Xo√° b·ªô nh·ªõ v√† l∆∞u l·ªãch s·ª≠ h·ªôi tho·∫°i\n"
        "\nüí¨ G·ª≠i c√¢u h·ªèi b·∫•t k·ª≥ ƒë·ªÉ bot tr·∫£ l·ªùi theo ng·ªØ c·∫£nh."
    )

async def reset(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = str(update.effective_chat.id)
    save_memory(chat_id)
    conversation_memory[chat_id] = []
    usage_counter[chat_id] = 0
    save_usage()
    await update.message.reply_text("‚úÖ B·ªô nh·ªõ h·ªôi tho·∫°i ƒë√£ ƒë∆∞·ª£c xo√° v√† l∆∞u l·∫°i.")

async def handle_message(update: Update,
